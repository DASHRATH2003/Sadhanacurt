@use "src/Styles/mixins" as m;

.header {
  padding: 4px 14px 18px 14px;
  margin-top: 30px;
  border-bottom: 1px var(--medium-light-gray) solid;
}

@include m.medium {
  .header {
    padding: 10px 0 14px 10px;
  }
}

@include m.small {
  .header {
    padding: 10px 0 14px 50px;
  }
}

.container {
  width: var(--container-width);
  margin: 0 auto;
  display: grid;
  align-items: center;
  grid-template-columns: 26% 1fr;
}

@include m.large {
  .container {
    grid-template-columns: unset;
  }
}

@include m.small {
  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: var(--container-mobile-width);
  }
}

.container h1 {
  width: fit-content;
  font-size: 1.5rem;
}

.logo {
  display: block;
  width: 50px;
  height: auto;
  -webkit-tap-highlight-color: transparent;
  outline: none;
  position: relative;
}

.logo img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.logo::before {
  content: '';
  position: absolute;
  left: 0;
  bottom: -2px;
  width: 0;
  height: 2px;
  background-color: var(--orange-degree2);
  transition: width .3s .1s;
}

.container h1:has(:focus) .logo::before {
  width: 100%;
}

.headerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@include m.medium {
  .headerContent {
    margin-top: 10px;
  }
}

@include m.small {
  .headerContent {
    display: none;
  }
}

// Arabic & Japanese styles
@media (max-width: 1300px) {
  :where([lang=ar], [lang=ja]) .container {
    grid-template-columns: 17% 1fr;
  }
}

@include m.large {
  :where([lang=ar], [lang=ja]) .container {
    grid-template-columns: unset;
  }
}

// Japanese styles
@include m.medium {
  [lang=ja] .headerContent {
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
  }
}

// French styles
[lang=fr] .container {
  width: var(--container-width);
}

// Hungarian styles
[lang=hu] .container {
  width: calc(var(--container-width) - 2%);
  grid-template-columns: 17% 1fr;
}

@include m.large {
  [lang=hu] .container {
    grid-template-columns: unset;
  }
}

// Russian styles
[lang=ru] .container {
  width: calc(var(--container-width) - 2%);
}